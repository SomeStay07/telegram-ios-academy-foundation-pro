import type { Meta, StoryObj } from '@storybook/react';
import React from 'react';

const meta: Meta = {
  title: 'üé® New Design System/01 Foundation/Typography',
  parameters: {
    layout: 'fullscreen',
    docs: {
      description: {
        component: `
# ‚úçÔ∏è Typography System

–ù–∞—à–∞ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ SF Pro –æ—Ç Apple —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ Telegram WebApp.

## Design Principles

- **Readability**: Optimal line spacing –∏ font sizes
- **Hierarchy**: Clear visual hierarchy –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
- **Accessibility**: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ screen readers –∏ scaling
- **Performance**: Web fonts optimization
- **Apple HIG**: –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ iOS guidelines

## Font Stack

### Primary: SF Pro
- **SF Pro Display**: –î–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –±–æ–ª—å—à–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
- **SF Pro Text**: –î–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏ UI
- **SF Mono**: –î–ª—è –∫–æ–¥–∞ –∏ –º–æ–Ω–æ–ø—Ä–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤

### Fallbacks
\`\`\`css
font-family: 
  'SF Pro Display', 
  -apple-system, 
  BlinkMacSystemFont, 
  'Segoe UI', 
  Roboto, 
  system-ui, 
  sans-serif;
\`\`\`

## Type Scale

–ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥—É–ª—å–Ω—É—é —à–∫–∞–ª—É 1.25 (Major Third) –¥–ª—è –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã—Ö –ø—Ä–æ–ø–æ—Ä—Ü–∏–π.
        `,
      },
    },
  },
};

export default meta;
type Story = StoryObj;

const typeScale = [
  { name: 'Display', size: '3.5rem', lineHeight: '1.1', weight: '700', usage: 'Hero headlines' },
  { name: 'H1', size: '2.5rem', lineHeight: '1.2', weight: '600', usage: 'Page titles' },
  { name: 'H2', size: '2rem', lineHeight: '1.25', weight: '600', usage: 'Section headers' },
  { name: 'H3', size: '1.5rem', lineHeight: '1.3', weight: '600', usage: 'Subsection headers' },
  { name: 'H4', size: '1.25rem', lineHeight: '1.4', weight: '500', usage: 'Component titles' },
  { name: 'H5', size: '1.125rem', lineHeight: '1.4', weight: '500', usage: 'Small headers' },
  { name: 'Body Large', size: '1.125rem', lineHeight: '1.6', weight: '400', usage: 'Large body text' },
  { name: 'Body', size: '1rem', lineHeight: '1.5', weight: '400', usage: 'Default body text' },
  { name: 'Body Small', size: '0.875rem', lineHeight: '1.4', weight: '400', usage: 'Small body text' },
  { name: 'Caption', size: '0.75rem', lineHeight: '1.3', weight: '400', usage: 'Captions, labels' },
  { name: 'Label', size: '0.75rem', lineHeight: '1.2', weight: '500', usage: 'Form labels, tags' },
];

const TypeSample: React.FC<{
  name: string;
  size: string;
  lineHeight: string;
  weight: string;
  usage: string;
}> = ({ name, size, lineHeight, weight, usage }) => (
  <div className="py-6 border-b border-gray-200 dark:border-gray-700 last:border-b-0">
    <div className="grid md:grid-cols-2 gap-6 items-start">
      <div>
        <h3 
          className="text-gray-900 dark:text-gray-100 mb-2"
          style={{ 
            fontSize: size, 
            lineHeight: lineHeight, 
            fontWeight: weight,
            fontFamily: "'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif"
          }}
        >
          {name === 'Display' ? 'iOS Academy' : name}
        </h3>
        <div className="text-sm text-gray-500 dark:text-gray-400 space-y-1">
          <div>Size: {size}</div>
          <div>Line Height: {lineHeight}</div>
          <div>Weight: {weight}</div>
          <div>Usage: {usage}</div>
        </div>
      </div>
      <div className="bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
        <div 
          className="text-gray-900 dark:text-gray-100"
          style={{ 
            fontSize: size, 
            lineHeight: lineHeight, 
            fontWeight: weight,
            fontFamily: "'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif"
          }}
        >
          {name === 'Display' && 'Design System 3.0'}
          {name === 'H1' && '–ò–∑—É—á–∞–π—Ç–µ iOS —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É'}
          {name === 'H2' && 'Swift –∏ UIKit –∫—É—Ä—Å—ã'}
          {name === 'H3' && '–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –≤ iOS'}
          {name === 'H4' && '–ö—É—Ä—Å—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'}
          {name === 'H5' && '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'}
          {name.includes('Body') && '–ò–∑—É—á–∞–π—Ç–µ iOS —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Å –Ω–∞—à–∏–º–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏. –ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–æ Swift, UIKit –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞–º–∏.'}
          {name === 'Caption' && '–û–±–Ω–æ–≤–ª–µ–Ω–æ 15 —è–Ω–≤–∞—Ä—è 2025'}
          {name === 'Label' && '–ù–û–í–´–ô –ö–£–†–°'}
        </div>
      </div>
    </div>
  </div>
);

export const TypeScale: Story = {
  render: () => (
    <div className="p-8 max-w-6xl mx-auto">
      <div className="mb-8">
        <h2 className="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4">
          üìè Type Scale
        </h2>
        <p className="text-gray-600 dark:text-gray-400 mb-6">
          –ú–æ–¥—É–ª—å–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —à–∫–∞–ª–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ç–∫–æ–π –≤–∏–∑—É–∞–ª—å–Ω–æ–π –∏–µ—Ä–∞—Ä—Ö–∏–∏.
        </p>
      </div>

      <div className="space-y-0">
        {typeScale.map((type) => (
          <TypeSample
            key={type.name}
            name={type.name}
            size={type.size}
            lineHeight={type.lineHeight}
            weight={type.weight}
            usage={type.usage}
          />
        ))}
      </div>

      <div className="mt-12 grid md:grid-cols-2 gap-8">
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-xl p-6">
          <h3 className="text-lg font-semibold text-blue-900 dark:text-blue-100 mb-4">
            ‚úÖ Best Practices
          </h3>
          <ul className="space-y-2 text-blue-800 dark:text-blue-200 text-sm">
            <li>‚Ä¢ Use semantic HTML headings (h1-h6)</li>
            <li>‚Ä¢ Maintain consistent vertical rhythm</li>
            <li>‚Ä¢ Consider reading distance on mobile</li>
            <li>‚Ä¢ Test with accessibility tools</li>
            <li>‚Ä¢ Follow iOS Dynamic Type guidelines</li>
          </ul>
        </div>

        <div className="bg-red-50 dark:bg-red-900/20 rounded-xl p-6">
          <h3 className="text-lg font-semibold text-red-900 dark:text-red-100 mb-4">
            ‚ùå Avoid
          </h3>
          <ul className="space-y-2 text-red-800 dark:text-red-200 text-sm">
            <li>‚Ä¢ Skipping heading levels (h1 ‚Üí h3)</li>
            <li>‚Ä¢ Using too many font weights</li>
            <li>‚Ä¢ Setting line-height too tight</li>
            <li>‚Ä¢ Custom font sizes outside scale</li>
            <li>‚Ä¢ Poor contrast ratios</li>
          </ul>
        </div>
      </div>
    </div>
  ),
  parameters: {
    docs: {
      description: {
        story: '–ú–æ–¥—É–ª—å–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —à–∫–∞–ª–∞ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ä–∞–∑–º–µ—Ä–æ–≤.',
      },
    },
  },
};

export const ResponsiveTypography: Story = {
  render: () => (
    <div className="p-8 max-w-6xl mx-auto">
      <div className="mb-8">
        <h2 className="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4">
          üì± Responsive Typography
        </h2>
        <p className="text-gray-600 dark:text-gray-400 mb-6">
          –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.
        </p>
      </div>

      <div className="space-y-8">
        {/* Mobile Examples */}
        <div className="bg-gradient-to-r from-pink-50 to-purple-50 dark:from-pink-900/20 dark:to-purple-900/20 rounded-xl p-6">
          <h3 className="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">
            üì± Mobile (&lt; 768px)
          </h3>
          <div className="space-y-4 max-w-sm">
            <h1 className="text-2xl md:text-4xl font-bold text-gray-900 dark:text-gray-100">
              iOS Academy
            </h1>
            <h2 className="text-xl md:text-2xl font-semibold text-gray-800 dark:text-gray-200">
              Swift –ö—É—Ä—Å—ã
            </h2>
            <p className="text-base text-gray-600 dark:text-gray-400 leading-relaxed">
              –ò–∑—É—á–∞–π—Ç–µ iOS —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤.
            </p>
            <span className="text-sm text-gray-500 dark:text-gray-500">
              –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è
            </span>
          </div>
        </div>

        {/* Desktop Examples */}
        <div className="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-xl p-6">
          <h3 className="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">
            üñ• Desktop (> 768px)
          </h3>
          <div className="space-y-6">
            <h1 className="text-5xl font-bold text-gray-900 dark:text-gray-100">
              iOS Academy Design System
            </h1>
            <h2 className="text-3xl font-semibold text-gray-800 dark:text-gray-200">
              –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ Swift –∏ UIKit –∫—É—Ä—Å—ã
            </h2>
            <p className="text-lg text-gray-600 dark:text-gray-400 leading-relaxed max-w-3xl">
              –ü–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –º–∏—Ä iOS —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –Ω–∞—à–∏–º–∏ –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–º–∏ –∫—É—Ä—Å–∞–º–∏. 
              –ò–∑—É—á–∞–π—Ç–µ Swift, UIKit, SwiftUI –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã 
              —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ real-world –ø—Ä–∏–º–µ—Ä–∞–º–∏.
            </p>
            <span className="text-base text-gray-500 dark:text-gray-500">
              –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: 15 —è–Ω–≤–∞—Ä—è 2025
            </span>
          </div>
        </div>

        {/* CSS Implementation */}
        <div className="bg-gray-50 dark:bg-gray-800 rounded-xl p-6">
          <h3 className="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">
            üíª CSS Implementation
          </h3>
          <pre className="text-sm text-gray-600 dark:text-gray-400 overflow-x-auto bg-white dark:bg-gray-900 p-4 rounded-lg">
{`/* Responsive Typography Classes */
.text-display {
  font-size: 2.5rem;
  line-height: 1.1;
  font-weight: 700;
}

@media (min-width: 768px) {
  .text-display {
    font-size: 3.5rem;
  }
}

.text-h1 {
  font-size: 1.875rem;
  line-height: 1.2;
  font-weight: 600;
}

@media (min-width: 768px) {
  .text-h1 {
    font-size: 2.5rem;
  }
}

/* Dynamic Type Support */
@media (prefers-reduced-motion: no-preference) {
  .responsive-text {
    font-size: clamp(1rem, 2.5vw, 1.5rem);
  }
}`}
          </pre>
        </div>
      </div>
    </div>
  ),
  parameters: {
    docs: {
      description: {
        story: '–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Å CSS —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π.',
      },
    },
  },
};

export const EducationalTypography: Story = {
  render: () => (
    <div className="p-8 max-w-6xl mx-auto">
      <div className="mb-8">
        <h2 className="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4">
          üéì Educational Content Typography
        </h2>
        <p className="text-gray-600 dark:text-gray-400 mb-6">
          –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.
        </p>
      </div>

      <div className="space-y-12">
        {/* Course Card Typography */}
        <div>
          <h3 className="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-6">
            üìö Course Cards
          </h3>
          <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700 max-w-md">
            <div className="space-y-3">
              <h4 className="text-lg font-semibold text-gray-900 dark:text-gray-100 line-clamp-2">
                SwiftUI for Beginners: Build Your First iOS App
              </h4>
              <p className="text-sm text-gray-600 dark:text-gray-400 line-clamp-3">
                Learn the fundamentals of SwiftUI and create beautiful, interactive iOS applications with declarative syntax and modern design patterns.
              </p>
              <div className="flex items-center justify-between text-xs text-gray-500 dark:text-gray-500">
                <span>4.8 ‚≠ê ‚Ä¢ 12.5k students</span>
                <span>Beginner</span>
              </div>
            </div>
          </div>
        </div>

        {/* Code Typography */}
        <div>
          <h3 className="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-6">
            üíª Code Display
          </h3>
          <div className="bg-gray-900 rounded-xl p-6 overflow-x-auto">
            <pre className="text-sm text-gray-100 font-mono leading-relaxed">
{`import SwiftUI

struct ContentView: View {
    @State private var name = ""
    
    var body: some View {
        VStack(spacing: 20) {
            Text("Hello, \\(name)!")
                .font(.largeTitle)
                .fontWeight(.bold)
            
            TextField("Enter your name", text: $name)
                .textFieldStyle(RoundedBorderTextFieldStyle())
                .padding(.horizontal)
        }
        .padding()
    }
}`}
            </pre>
          </div>
        </div>

        {/* Learning Progress Typography */}
        <div>
          <h3 className="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-6">
            üìà Progress & Stats
          </h3>
          <div className="grid md:grid-cols-3 gap-6">
            <div className="text-center p-6 bg-blue-50 dark:bg-blue-900/20 rounded-xl">
              <div className="text-3xl font-bold text-blue-600 dark:text-blue-400 mb-1">
                85%
              </div>
              <div className="text-sm font-medium text-blue-800 dark:text-blue-200">
                Course Progress
              </div>
            </div>
            <div className="text-center p-6 bg-green-50 dark:bg-green-900/20 rounded-xl">
              <div className="text-3xl font-bold text-green-600 dark:text-green-400 mb-1">
                1,250
              </div>
              <div className="text-sm font-medium text-green-800 dark:text-green-200">
                XP Earned
              </div>
            </div>
            <div className="text-center p-6 bg-purple-50 dark:bg-purple-900/20 rounded-xl">
              <div className="text-3xl font-bold text-purple-600 dark:text-purple-400 mb-1">
                12
              </div>
              <div className="text-sm font-medium text-purple-800 dark:text-purple-200">
                Day Streak
              </div>
            </div>
          </div>
        </div>

        {/* Quiz Typography */}
        <div>
          <h3 className="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-6">
            ‚ùì Quiz & Questions
          </h3>
          <div className="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm border border-gray-200 dark:border-gray-700">
            <h4 className="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">
              Question 3 of 10
            </h4>
            <p className="text-base text-gray-700 dark:text-gray-300 mb-6 leading-relaxed">
              Which SwiftUI view modifier is used to apply custom styling to a view's background?
            </p>
            <div className="space-y-3">
              {['background()', 'overlay()', 'modifier()', 'style()'].map((option, index) => (
                <div key={index} className="p-3 border border-gray-200 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer">
                  <span className="text-sm font-medium text-gray-700 dark:text-gray-300">
                    {String.fromCharCode(65 + index)}. {option}
                  </span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  ),
  parameters: {
    docs: {
      description: {
        story: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.',
      },
    },
  },
};

export const AccessibilityTypography: Story = {
  render: () => (
    <div className="p-8 max-w-6xl mx-auto">
      <div className="mb-8">
        <h2 className="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4">
          ‚ôø Accessibility & Readability
        </h2>
        <p className="text-gray-600 dark:text-gray-400 mb-6">
          –¢–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏.
        </p>
      </div>

      <div className="space-y-8">
        {/* Contrast Examples */}
        <div>
          <h3 className="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-6">
            üé® Color Contrast
          </h3>
          <div className="grid md:grid-cols-2 gap-6">
            <div className="space-y-4">
              <h4 className="font-semibold text-green-600">‚úÖ Good Contrast</h4>
              <div className="bg-white p-4 rounded-lg border">
                <p className="text-gray-900 mb-2 font-semibold">Primary Text (21:1)</p>
                <p className="text-gray-700 mb-2">Secondary Text (16:1)</p>
                <p className="text-gray-600">Tertiary Text (11:1)</p>
              </div>
            </div>
            <div className="space-y-4">
              <h4 className="font-semibold text-red-600">‚ùå Poor Contrast</h4>
              <div className="bg-white p-4 rounded-lg border">
                <p className="text-gray-400 mb-2 font-semibold">Too Light (3:1)</p>
                <p className="text-gray-300 mb-2">Very Light (2:1)</p>
                <p className="text-gray-200">Barely Visible (1.5:1)</p>
              </div>
            </div>
          </div>
        </div>

        {/* Font Size Scaling */}
        <div>
          <h3 className="text-xl font-semibold text-gray-900 dark:text-gray-100 mb-6">
            üìè Dynamic Type Support
          </h3>
          <div className="space-y-6">
            <div className="p-6 bg-blue-50 dark:bg-blue-900/20 rounded-xl">
              <h4 className="font-semibold text-blue-900 dark:text-blue-100 mb-4">
                iOS Dynamic Type Categories
              </h4>
              <div className="space-y-3">
                <div className="flex items-center justify-between">
                  <span className="text-xs">Extra Small</span>
                  <span className="text-xs text-gray-600 dark:text-gray-400">xSmall</span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm">Small</span>
                  <span className="text-xs text-gray-600 dark:text-gray-400">Small</span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-base">Medium (Default)</span>
                  <span className="text-xs text-gray-600 dark:text-gray-400">Medium</span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-lg">Large</span>
                  <span className="text-xs text-gray-600 dark:text-gray-400">Large</span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-xl">Extra Large</span>
                  <span className="text-xs text-gray-600 dark:text-gray-400">xLarge</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Reading Guidelines */}
        <div className="grid md:grid-cols-2 gap-8">
          <div className="bg-green-50 dark:bg-green-900/20 rounded-xl p-6">
            <h3 className="text-lg font-semibold text-green-900 dark:text-green-100 mb-4">
              üìñ Reading Best Practices
            </h3>
            <ul className="space-y-2 text-green-800 dark:text-green-200 text-sm">
              <li>‚Ä¢ Line length: 45-75 characters</li>
              <li>‚Ä¢ Line height: 1.4-1.6 for body text</li>
              <li>‚Ä¢ Paragraph spacing: 1em bottom margin</li>
              <li>‚Ä¢ Font size: minimum 16px on mobile</li>
              <li>‚Ä¢ Support system font scaling</li>
            </ul>
          </div>

          <div className="bg-purple-50 dark:bg-purple-900/20 rounded-xl p-6">
            <h3 className="text-lg font-semibold text-purple-900 dark:text-purple-100 mb-4">
              üîß Implementation Tips
            </h3>
            <ul className="space-y-2 text-purple-800 dark:text-purple-200 text-sm">
              <li>‚Ä¢ Use relative units (rem, em)</li>
              <li>‚Ä¢ Test with iOS accessibility settings</li>
              <li>‚Ä¢ Provide focus indicators</li>
              <li>‚Ä¢ Support VoiceOver navigation</li>
              <li>‚Ä¢ Use semantic HTML elements</li>
            </ul>
          </div>
        </div>

        {/* Code Example */}
        <div className="bg-gray-50 dark:bg-gray-800 rounded-xl p-6">
          <h3 className="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">
            üíª CSS Implementation
          </h3>
          <pre className="text-sm text-gray-600 dark:text-gray-400 overflow-x-auto">
{`/* Accessible Typography CSS */
.accessible-text {
  font-size: 1rem;
  line-height: 1.5;
  color: var(--text-primary);
  max-width: 65ch; /* Optimal reading length */
}

/* Support for iOS Dynamic Type */
@media (prefers-reduced-motion: no-preference) {
  .dynamic-text {
    font-size: calc(1rem + 0.5vw);
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .accessible-text {
    color: black;
    font-weight: 600;
  }
}

/* Focus indicators */
.focusable:focus {
  outline: 2px solid var(--focus-color);
  outline-offset: 2px;
}`}
          </pre>
        </div>
      </div>
    </div>
  ),
  parameters: {
    docs: {
      description: {
        story: 'Accessibility guidelines –∏ best practices –¥–ª—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∏.',
      },
    },
  },
};
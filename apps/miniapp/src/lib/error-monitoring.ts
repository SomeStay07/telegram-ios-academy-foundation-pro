// Sentry error monitoring rules
// –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è

import { analytics } from './analytics/index'

// –¢–∏–ø—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
export enum CriticalErrorType {
  CHUNK_LOAD_ERROR = 'chunk_load_error',
  ANALYTICS_GAP = 'analytics_gap',
  ROUTE_ERROR = 'route_error',
  RENDER_ERROR = 'render_error',
  API_ERROR = 'api_error'
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –æ—à–∏–±–∫–∏
interface ErrorDetails {
  type: CriticalErrorType
  message: string
  stack?: string
  context?: Record<string, any>
  timestamp: number
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
export function setupErrorMonitoring(): void {
  if (typeof window === 'undefined') return

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ chunk load errors (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ lazy loading)
  window.addEventListener('error', (event) => {
    if (event.filename && event.filename.includes('.js') && event.message.includes('Loading')) {
      reportCriticalError({
        type: CriticalErrorType.CHUNK_LOAD_ERROR,
        message: `Failed to load chunk: ${event.filename}`,
        stack: event.error?.stack,
        context: {
          filename: event.filename,
          lineno: event.lineno,
          colno: event.colno,
          userAgent: navigator.userAgent
        },
        timestamp: Date.now()
      })
    }
  })

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ unhandled promise rejections
  window.addEventListener('unhandledrejection', (event) => {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
    if (event.reason?.message?.includes('ResizeObserver')) {
      return
    }

    reportCriticalError({
      type: CriticalErrorType.RENDER_ERROR,
      message: `Unhandled promise rejection: ${event.reason}`,
      stack: event.reason?.stack,
      context: {
        reason: String(event.reason),
        userAgent: navigator.userAgent
      },
      timestamp: Date.now()
    })
  })

  // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ–ª–≥–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ –±–µ–∑ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π
  let lastAnalyticsEvent = Date.now()
  const checkAnalyticsGap = () => {
    const gap = Date.now() - lastAnalyticsEvent
    // –ï—Å–ª–∏ –±–æ–ª—å—à–µ 10 –º–∏–Ω—É—Ç –±–µ–∑ —Å–æ–±—ã—Ç–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ - —ç—Ç–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ
    if (gap > 10 * 60 * 1000) {
      reportCriticalError({
        type: CriticalErrorType.ANALYTICS_GAP,
        message: `No analytics events for ${Math.round(gap / 1000 / 60)} minutes`,
        context: {
          gap: gap,
          lastEvent: lastAnalyticsEvent,
          userAgent: navigator.userAgent
        },
        timestamp: Date.now()
      })
      lastAnalyticsEvent = Date.now() // Reset to avoid spam
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  setInterval(checkAnalyticsGap, 5 * 60 * 1000)

  // –•—É–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π
  const originalTrack = analytics.pageLoad
  analytics.pageLoad = (...args) => {
    lastAnalyticsEvent = Date.now()
    return originalTrack(...args)
  }

  if (import.meta.env.DEV) {
    console.log('üîç Error monitoring initialized')
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
function reportCriticalError(error: ErrorDetails): void {
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ analytics –¥–ª—è –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
  analytics.error({
    error: error.message,
    context: JSON.stringify({
      type: error.type,
      stack: error.stack?.substring(0, 500), // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
      ...error.context
    })
  })

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Sentry –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
  if (typeof window !== 'undefined' && (window as any).Sentry) {
    (window as any).Sentry.captureException(new Error(error.message), {
      tags: {
        error_type: error.type,
        critical: 'true'
      },
      extra: error.context,
      fingerprint: [error.type, error.message]
    })
  }

  // –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å –≤ development
  if (import.meta.env.DEV) {
    console.error('üö® Critical error:', error)
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ä—É—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–æ–∫ –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
export function reportError(type: CriticalErrorType, message: string, context?: Record<string, any>): void {
  reportCriticalError({
    type,
    message,
    context,
    timestamp: Date.now()
  })
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if (typeof window !== 'undefined' && import.meta.env.PROD) {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
  setTimeout(setupErrorMonitoring, 1000)
}
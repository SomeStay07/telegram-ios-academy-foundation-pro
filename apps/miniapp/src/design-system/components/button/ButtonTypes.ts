import { type VariantProps } from 'class-variance-authority'
import { buttonVariants, gradientVariants, neonVariants, socialVariants } from './ButtonVariants'

/**
 * üéØ Button TypeScript Types
 * 
 * –ú–æ–¥—É–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ —Ç–∏–ø—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
 * –†–∞–∑–¥–µ–ª–µ–Ω –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ Button.tsx –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–∏–ø–∏–∑–∞—Ü–∏–∏
 */

/**
 * üîß –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã –∫–Ω–æ–ø–æ–∫
 */
export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  /** –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ */
  loading?: boolean
  /** –ò–∫–æ–Ω–∫–∞ —Å–ª–µ–≤–∞ –æ—Ç —Ç–µ–∫—Å—Ç–∞ */
  leftIcon?: React.ReactNode
  /** –ò–∫–æ–Ω–∫–∞ —Å–ø—Ä–∞–≤–∞ –æ—Ç —Ç–µ–∫—Å—Ç–∞ */
  rightIcon?: React.ReactNode
  /** –¢–æ–ª—å–∫–æ –∏–∫–æ–Ω–∫–∞ (–±–µ–∑ —Ç–µ–∫—Å—Ç–∞) */
  iconOnly?: React.ReactNode
  /** –ö–∞—Å—Ç–æ–º–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã */
  className?: string
  /** –î–µ—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ */
  children?: React.ReactNode
  /** –†–µ–Ω–¥–µ—Ä–∏—Ç—å –∫–∞–∫ —Å—Å—ã–ª–∫—É */
  asChild?: boolean
  /** –ü–æ–ª–Ω–∞—è —à–∏—Ä–∏–Ω–∞ */
  fullWidth?: boolean
  /** –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç */
  gradientVariant?: keyof typeof gradientVariants
  /** –ù–µ–æ–Ω–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç */
  neonVariant?: keyof typeof neonVariants
  /** –°–æ—Ü–∏–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç */
  socialVariant?: keyof typeof socialVariants
}

/**
 * ‚ö° –¢–∏–ø—ã –¥–ª—è ButtonGroup
 */
export interface ButtonGroupProps extends React.HTMLAttributes<HTMLDivElement> {
  /** –†–∞–∑–º–µ—Ä –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –≤ –≥—Ä—É–ø–ø–µ */
  size?: VariantProps<typeof buttonVariants>['size']
  /** –í–∞—Ä–∏–∞–Ω—Ç –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –≤ –≥—Ä—É–ø–ø–µ */
  variant?: VariantProps<typeof buttonVariants>['variant']
  /** –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã */
  orientation?: 'horizontal' | 'vertical'
  /** –°–≤—è–∑–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ (–±–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤ –º–µ–∂–¥—É –Ω–∏–º–∏) */
  attached?: boolean
  /** –î–µ—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ */
  children: React.ReactNode
  /** –ö–∞—Å—Ç–æ–º–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã */
  className?: string
}

/**
 * üîÑ –¢–∏–ø—ã –¥–ª—è ToggleButton
 */
export interface ToggleButtonProps extends Omit<ButtonProps, 'pressed'> {
  /** –ù–∞–∂–∞—Ç–æ –ª–∏ (toggle —Å–æ—Å—Ç–æ—è–Ω–∏–µ) */
  pressed?: boolean
  /** Callback –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è */
  onPressedChange?: (pressed: boolean) => void
  /** –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è toggle –≥—Ä—É–ø–ø—ã */
  value?: string
}

/**
 * üìä –¢–∏–ø—ã –¥–ª—è ToggleGroup
 */
export interface ToggleGroupProps extends React.HTMLAttributes<HTMLDivElement> {
  /** –¢–∏–ø –≥—Ä—É–ø–ø—ã */
  type: 'single' | 'multiple'
  /** –ó–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è single —Ä–µ–∂–∏–º–∞ */
  value?: string
  /** –ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è multiple —Ä–µ–∂–∏–º–∞ */
  values?: string[]
  /** –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é */
  defaultValue?: string
  /** –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è multiple */
  defaultValues?: string[]
  /** Callback –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è */
  onValueChange?: (value: string) => void
  /** Callback –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π */
  onValuesChange?: (values: string[]) => void
  /** –†–∞–∑–º–µ—Ä –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ */
  size?: VariantProps<typeof buttonVariants>['size']
  /** –í–∞—Ä–∏–∞–Ω—Ç –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ */
  variant?: VariantProps<typeof buttonVariants>['variant']
  /** –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã */
  orientation?: 'horizontal' | 'vertical'
  /** –î–µ—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ */
  children: React.ReactNode
  /** –ö–∞—Å—Ç–æ–º–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã */
  className?: string
  /** –û—Ç–∫–ª—é—á–∏—Ç—å –≤—Å—é –≥—Ä—É–ø–ø—É */
  disabled?: boolean
}

/**
 * üé® –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ç–∏–ø–æ–≤
 */
export type ButtonVariant = VariantProps<typeof buttonVariants>['variant']
export type ButtonSize = VariantProps<typeof buttonVariants>['size']
export type GradientVariant = keyof typeof gradientVariants
export type NeonVariant = keyof typeof neonVariants
export type SocialVariant = keyof typeof socialVariants

/**
 * üì± –¢–∏–ø—ã –¥–ª—è –∏–∫–æ–Ω–æ–∫
 */
export interface IconProps {
  /** –†–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏ */
  size?: number | string
  /** –¶–≤–µ—Ç –∏–∫–æ–Ω–∫–∏ */
  color?: string
  /** CSS –∫–ª–∞—Å—Å */
  className?: string
}

/**
 * üîß –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ç–∏–ø—ã
 */
export type ButtonElement = React.ElementRef<"button">
export type ButtonRef = React.ForwardedRef<ButtonElement>

/**
 * üé≠ –°–æ—Å—Ç–∞–≤–Ω—ã–µ —Ç–∏–ø—ã –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
 */
export interface ActionButtonProps extends ButtonProps {
  /** –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è */
  confirmAction?: boolean
  /** –¢–µ–∫—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è */
  confirmText?: string
  /** –û–ø–∞—Å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ */
  destructive?: boolean
  /** Tooltip —Ç–µ–∫—Å—Ç */
  tooltip?: string
}

export interface SplitButtonProps extends ButtonProps {
  /** –û—Å–Ω–æ–≤–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ */
  mainAction: () => void
  /** –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */
  menuItems: Array<{
    label: string
    action: () => void
    icon?: React.ReactNode
    disabled?: boolean
    destructive?: boolean
  }>
  /** –ü–æ–∑–∏—Ü–∏—è –º–µ–Ω—é */
  menuPosition?: 'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'
}

/**
 * üìä –¢–∏–ø—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
 */
export interface ButtonState {
  /** –ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */
  isActive: boolean
  /** –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ */
  isLoading: boolean
  /** –û—Ç–∫–ª—é—á–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */
  isDisabled: boolean
  /** –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–≤–µ–¥–µ–Ω–∏—è */
  isHovered: boolean
  /** –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ–∫—É—Å–∞ */
  isFocused: boolean
  /** –ù–∞–∂–∞—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */
  isPressed: boolean
}

/**
 * üé™ –¢–∏–ø—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
 */
export interface ButtonAnimation {
  /** –¢–∏–ø –∞–Ω–∏–º–∞—Ü–∏–∏ */
  type: 'bounce' | 'pulse' | 'shake' | 'spin' | 'ping'
  /** –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏ */
  duration?: number
  /** –ó–∞–¥–µ—Ä–∂–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ */
  delay?: number
  /** –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ */
  iterations?: number | 'infinite'
}

/**
 * üîä –¢–∏–ø—ã –¥–ª—è accessibility
 */
export interface ButtonA11y {
  /** Aria label */
  'aria-label'?: string
  /** Aria –æ–ø–∏—Å–∞–Ω–∏–µ */
  'aria-describedby'?: string
  /** –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */
  'aria-expanded'?: boolean
  /** –ù–∞–∂–∞—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */
  'aria-pressed'?: boolean
  /** –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */
  'aria-current'?: boolean | 'page' | 'step' | 'location' | 'date' | 'time'
  /** –†–æ–ª—å —ç–ª–µ–º–µ–Ω—Ç–∞ */
  role?: string
}

/**
 * ‚ö° –û–±–æ–±—â–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
 */
export type AnyButtonProps = 
  | ButtonProps 
  | ToggleButtonProps 
  | ActionButtonProps 
  | SplitButtonProps

/**
 * üîó –¢–∏–ø—ã –¥–ª—è —Å—Å—ã–ª–æ–∫-–∫–Ω–æ–ø–æ–∫
 */
export interface LinkButtonProps extends Omit<ButtonProps, 'onClick'> {
  /** URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ */
  href: string
  /** –û—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ */
  external?: boolean
  /** –ó–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –∏—Å—Ç–æ—Ä–∏–∏ */
  replace?: boolean
  /** –ü—Ä–µ—Ñetch —Å—Å—ã–ª–∫–∏ */
  prefetch?: boolean
}
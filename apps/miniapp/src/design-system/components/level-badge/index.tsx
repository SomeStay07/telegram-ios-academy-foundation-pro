import React from 'react'
import { cn } from '../../../lib/utils'

// –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π
import { levelBadgeVariants } from './LevelBadgeVariants'
import { type LevelBadgeProps } from './LevelBadgeTypes'
import {
  getLevelVariant,
  formatLevel,
  shouldGlow,
  shouldShowParticles,
  shouldShimmer,
  shouldShowLabel,
  getTextSizeClasses,
  getA11yProps,
  createKeyboardHandler,
  getTextShadowStyle,
  useAnimationState
} from './LevelBadgeLogic'

/**
 * üé® Enhanced LevelBadge Component
 * 
 * –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –∏–≥—Ä–æ–∫–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–±–æ—Ä–æ–º —Å—Ç–∏–ª—è
 * –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏.
 * –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ª—É—á—à–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö gaming UI –¥–∏–∑–∞–π–Ω–∞.
 * 
 * @example
 * // –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
 * <LevelBadge level={25} />
 * 
 * // –° –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 * <LevelBadge level={85} maxLevel={100} />
 * 
 * // –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å –ª–µ–π–±–ª–æ–º
 * <LevelBadge 
 *   level={42}
 *   showLabel
 *   interactive
 *   animated
 *   onClick={() => console.log('Level clicked')}
 * />
 * 
 * // –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å—Ç–∏–ª—å –¥–ª—è –æ—Å–æ–±—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
 * <LevelBadge 
 *   level={999}
 *   variant="legendary"
 *   size="xl"
 *   shape="circle"
 *   glow
 * />
 */
export const LevelBadge = React.forwardRef<HTMLDivElement, LevelBadgeProps>(
  ({
    className,
    variant,
    size = "md",
    shape = "rounded",
    interactive = false,
    glow = false,
    level,
    maxLevel = 100,
    showLabel = false,
    onClick,
    animated = false,
    ...props
  }, ref) => {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
    const autoVariant = variant || getLevelVariant(level, maxLevel)
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ —É—Ä–æ–≤–Ω—è
    const displayLevel = formatLevel(level)
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    const isAnimating = useAnimationState(level, animated)
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    const keyboardHandler = createKeyboardHandler(onClick)

    return (
      <div
        ref={ref}
        className={cn(
          levelBadgeVariants({ 
            variant: autoVariant, 
            size, 
            shape,
            interactive,
            glow: glow || isAnimating || shouldGlow(autoVariant)
          }),
          // –ê–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è
          isAnimating && "animate-bounce",
          className
        )}
        onClick={onClick}
        onKeyDown={keyboardHandler}
        {...getA11yProps(!!interactive, level, maxLevel)}
        {...props}
      >
        {/* –§–æ–Ω–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è –¥–ª—è –≤—ã—Å–æ–∫–∏—Ö —É—Ä–æ–≤–Ω–µ–π */}
        {shouldShimmer(autoVariant) && (
          <div 
            className="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -translate-x-full animate-shimmer" 
            style={{ animation: 'shimmer 3s infinite linear' }} 
          />
        )}
        
        {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="relative z-10 flex flex-col items-center justify-center">
          {/* –õ–µ–π–±–ª LVL –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ */}
          {shouldShowLabel(size, showLabel) && (
            <span className="text-xs opacity-75 font-medium leading-none mb-0.5">
              LVL
            </span>
          )}
          
          {/* –ù–æ–º–µ—Ä —É—Ä–æ–≤–Ω—è */}
          <span 
            className={cn(
              "font-bold tabular-nums leading-none",
              // –¢–µ–Ω—å –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
              "drop-shadow-sm",
              // –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–ª–∏–Ω—ã —á–∏—Å–ª–∞
              ...getTextSizeClasses(displayLevel)
            )}
            style={getTextShadowStyle(autoVariant)}
          >
            {displayLevel}
          </span>
        </div>
        
        {/* –≠—Ñ—Ñ–µ–∫—Ç —á–∞—Å—Ç–∏—Ü –¥–ª—è –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è */}
        {shouldShowParticles(autoVariant) && (
          <>
            <div className="absolute top-1 left-1 w-1 h-1 bg-white rounded-full animate-ping opacity-75" />
            <div className="absolute bottom-1 right-1 w-0.5 h-0.5 bg-white rounded-full animate-ping animation-delay-300 opacity-75" />
            <div className="absolute top-1 right-2 w-0.5 h-0.5 bg-white rounded-full animate-ping animation-delay-700 opacity-75" />
          </>
        )}
      </div>
    )
  }
)

LevelBadge.displayName = "LevelBadge"

// –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∏ —É—Ç–∏–ª–∏—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
export * from './LevelBadgeTypes'
export * from './LevelBadgeVariants'
export * from './LevelBadgeLogic'